---
title: "Cards winrate"
---

```{r setup, include=FALSE, message = FALSE, warning = FALSE} 
library("rjson")
library(kableExtra)
library(tidyverse)
library(htmltools)

source("../sources/S2_Source_mtg_new_card.R",local = TRUE)
source("../sources/sources_script_specific/S3_Card_win_rate_table.R", local = TRUE)
conflicted::conflicts_prefer(dplyr::filter)
# All table include tooltip column description
# Reflechir a carte de side vs maccro archetype
```


```{r}
knitr::read_chunk("../sources/S1_introduction_text.R")
```



```{r, Introduction_chunk_3_Deck_analysis, results='asis'}

```




```{r data_reading }
filter_archetype_count <- 10#50

df_export <- readRDS("../data/data_meta_en_cours.rds") %>%
    # include filter bad deck
  filter(Valide_deck) %>% 
  mutate(
    Deck_winrate = Wins / (Losses + Wins)
  ) %>%
  mutate(
    Archetype_count = n()
  )



df_Archetype <- df_export %>%
  filter(!is.na(Wins)) %>%
  rowwise() %>%
  filter(!is.null(Mainboard)) %>%
  filter(!is.null(Sideboard)) %>%
  ungroup() %>%
  group_by(Archetype) %>%
  mutate(
    Archetype_count = n()
  ) %>%
  filter(Archetype_count > filter_archetype_count) %>%
  arrange(desc(Archetype_count))


df_base_Archetype <- df_export %>%
  ungroup() %>%
  filter(!is.na(Wins)) %>%
  rowwise() %>%
  filter(!is.null(Mainboard)) %>%
  filter(!is.null(Sideboard)) %>%
  ungroup() %>%
  group_by(Base_Archetype) %>%
  mutate(
    Archetype_count = n()
  ) %>%
  # filter(Archetype_count > filter_archetype_count) %>%
  arrange(desc(Archetype_count))

# modern_DB_card <- read_csv("data/DBcarte_modern.csv")
```



```{r}
tooltips_deck_base <- c(
  "Deck Archetype agregated",
  "Number of decks in the archetype",
  "Card name",
  "Number of copies of the most represented card",
  "Possible number of copies",
  'Number of times and percentage where the card is not present in the most representative number of copies. For example, if "Most present count" = 4, this column counts the number of decks where the card is present 0, 1, 2 or 3 times.'
)



tooltips_deck_variable_arch <- c(
  "Deck Archetype agregated",
  "Number of decks include in the win rate computation",
  "Percent of the deck in the archetype with the card",
  "Card name",
  "Number of copies of the card",
  "Win rate of the card",
  "95 % Confidence intervale of card win rate",
  'Win rate of the card vs deck with different count for the card.For example, if "Count" = 4, the win rate of 4 copies minus the win rate of 0, 1, 2 or 3 copies.',
  "95 % Confidence intervale of card win rate vs other",
  "The confidence interval is different from 0. + means a strictly positive confidence interval - means a strictly negative confidence interval,  0 means a confidence interval covering 0.",
  "Win rate of the card vs deck gobal win rate.",
  "95 % Confidence intervale of card win rate vs vs deck gobal win rate.",
  "The confidence interval is different from 0. + means a strictly positive confidence interval - means a strictly negative confidence interval,  0 means a confidence interval covering 0."
)
```


```{r js_function}
onfly_filter_js <- c(r"{
function onlyUnique(value, index, self) {
return self.indexOf(value) === index;
};
var table_header = table.table().header();
var column_nodes = $(table_header).find('tr:nth-child(2) > td');
var input_nodes = $(column_nodes).find('input.form-control');
for (let i = 0; i < input_nodes.length; i++){
data_type_attr = $(input_nodes[i]).closest('td').attr('data-type');
if (data_type_attr == 'factor'){
$(input_nodes[i]).on('input propertychange', function(){
if (typeof unique_values !== 'undefined'){
selection_content = $(input_nodes[i]).closest('td').find('div.selectize-dropdown-content');
var content_str = '';
for (let j = 0; j < unique_values.length; j++){
content_str = content_str.concat('<div data-value="', unique_values[j],'" data-selectable="" class="option">', unique_values[j], '</div>')
}
selection_content[0].innerHTML = content_str;
}
})
}
}
column_nodes.on('click', function(){
setTimeout(function(){
for (let i = 0; i < column_nodes.length; i++){
data_type_attr = $(column_nodes[i]).attr('data-type');
if (data_type_attr == 'factor'){
selection_div = $(column_nodes[i]).find('div.selectize-input');
if($(selection_div).hasClass('dropdown-active')){
values = table.column(i, {pages: 'all', search: 'applied'}).data();
unique_values = Array.from(values.filter(onlyUnique));
selection_content = $(column_nodes[i]).find('div.selectize-dropdown-content');
var content_str = '';
for (let j = 0; j < unique_values.length; j++){
content_str = content_str.concat('<div data-value="', unique_values[j],'" data-selectable="" class="option">', unique_values[j], '</div>')
}
selection_content[0].innerHTML = content_str;
}
}
}
}, 50);
})
}")
```



```{r}
win_rate_main_board <- Count_and_winrates_cards_in_decklist_total(
  df_Archetype,
  "Archetype",
  "Mainboard"
)
```



```{r}
win_rate_side_board <- Count_and_winrates_cards_in_decklist_total(
  df_Archetype,
  "Archetype",
  "Sideboard"
)
```





# Archetype Card winrate table 

## Mainboard cards 

### Base cards Mainboard  

The cards making up the base of the deck are those who a specif number of copies is present in 99% of decks or whose copies are absent from less than 10 decks.

```{r}
# Create the datatable with hover-over tooltips
DT::datatable(
  format_df_result_card_table(
    df_base_fun = win_rate_main_board$Card_always_in_deck_final,
   df_Archetyp_fun = df_Archetype
  ),
  filter = "top", rownames = FALSE,
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(tooltips_deck_base, collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  options = list(dom = "ltipr", autoWidth = TRUE, pageLength = 25),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Base cards in Mainboard"
  )
)
```









### Variable Cards Mainboard


```{r}
DT::datatable(
  format_df_result_card_table(
    win_rate_main_board$Win_rate_df_final,
    df_Archetype
  ),
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(tooltips_deck_variable_arch, collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  filter = "top", rownames = FALSE,
  options = list(dom = "ltipr",  
                 searchCols = list(
                   NULL,
                   list(search = '10 ...'),
                   NULL,NULL,
                   list(search = '["Any"]' ),
                   NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
  ), 
  autoWidth = TRUE, pageLength = 25),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Mainboard cards"
  )
) %>% 
  DT::formatPercentage(c(3,6,8,11),digits = 1)
```





## sideboard_card

### Base cards Side  

The cards making up the base of the deck are those who a specif number of copies is present in 99% of decks or whose copies are absent from less than 10 decks.


```{r}
DT::datatable(
  format_df_result_card_table(
    win_rate_side_board$Card_always_in_deck_final,
    # "Sideboard",
    df_Archetype,
  ),
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(tooltips_deck_base, collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  filter = "top", rownames = FALSE,
  options = list(dom = "ltipr", autoWidth = TRUE, pageLength = 25),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Sideboard base cards"
  )
)
```



### Variable Cards Side    
 
```{r}
DT::datatable(
  format_df_result_card_table(
    win_rate_side_board$Win_rate_df_final,
    # "Sideboard",
    df_Archetype,
  ),
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(tooltips_deck_variable_arch, collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  filter = "top", rownames = FALSE,
  options = list(dom = "ltipr",  
                 searchCols = list(
                   NULL,
                   list(search = '10 ...'),
                   NULL,NULL,
                   list(search = '["Any"]' ),
                   NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
  ), autoWidth = TRUE, pageLength = 25),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Sideboard cards"
  )
) %>% 
  DT::formatPercentage(c(3,6,8,11),digits = 1)
```


# Based Archetype Card winrate table  

```{r}
win_rate_main_board_based_arch <- Count_and_winrates_cards_in_decklist_total(
  df_base_Archetype,
  "Base_Archetype",
  "Mainboard"
)
```



```{r}
win_rate_side_board_based_arch <- Count_and_winrates_cards_in_decklist_total(
  df_base_Archetype,
  "Base_Archetype",
  "Sideboard"
)
```




## Mainboard cards

### Base cards Mainboard

The cards making up the base of the deck are those who a specif number of copies is present in 99% of decks or whose copies are absent from less than 10 decks.

```{r}
DT::datatable(
  format_df_result_card_table(
    win_rate_main_board_based_arch$Card_always_in_deck_final,
    # colname_deck_list = "Mainboard",
    df_Archetyp_fun = df_base_Archetype,
    Based_Archetyp_fun  = TRUE
  ),
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(c(
        "Deck Archetype not agregated",
        tooltips_deck_base
      ), collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  filter = "top", rownames = FALSE,
  options = list(dom = "ltipr", autoWidth = TRUE, pageLength = 25),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Mainboards base cards"
  )
)
```

### Variable Cards Mainboard  


```{r}
DT::datatable(
  format_df_result_card_table(
    win_rate_main_board_based_arch$Win_rate_df_final,
    # colname_deck_list = "Mainboard",
    df_Archetyp_fun = df_base_Archetype,
    Based_Archetyp_fun  = TRUE
  ),
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(c(
        "Deck Archetype not agregated",
        tooltips_deck_variable_arch
      ), collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  filter = "top", rownames = FALSE,
  options = list(dom = "ltipr", 
                 searchCols = list(
                   NULL,NULL,
                   list(search = '10 ...'),
                   NULL,NULL,
                   list(search = '["Any"]' ),
                   NULL,NULL,NULL,NULL
  ),
                 autoWidth = TRUE, pageLength = 25),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Mainboard cards"
  )
) %>% 
  DT::formatPercentage(c(4,7,9,12),digits = 1)
```



## sideboard cards


### Base cards sideboard

The cards making up the base of the deck are those who a specif number of copies is present in 99% of decks or whose copies are absent from less than 10 decks.

```{r}
DT::datatable(
  format_df_result_card_table(
    win_rate_side_board_based_arch$Card_always_in_deck_final,
    # colname_deck_list = "Sideboard",
    df_Archetyp_fun = df_base_Archetype,
    Based_Archetyp_fun  = TRUE
  ),
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(c(
        "Deck Archetype not agregated",
        tooltips_deck_base
      ), collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  filter = "top", rownames = FALSE,
  options = list(dom = "ltipr",
                 
                 autoWidth = TRUE, pageLength = 25),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Sideboard base cards"
  )
) 
```

### Variable Cards sideboard   


```{r}
DT::datatable(
  format_df_result_card_table(
    win_rate_side_board_based_arch$Win_rate_df_final,
    # colname_deck_list = "Sideboard",
    df_Archetyp_fun = df_base_Archetype,
    Based_Archetyp_fun  = TRUE
  ),
  callback = DT::JS(
    paste0(
      "var tips = ['", paste0(c(
        "Deck Archetype not agregated",
        tooltips_deck_variable_arch
      ), collapse = "','"), "'],
    header = table.columns().header();
for (var i = 0; i < tips.length; i++) {
  $(header[i]).attr('title', tips[i]);
}
",
      onfly_filter_js
    )
  ),
  filter = "top", rownames = FALSE,
  options = list(
    dom = "ltipr",
                     searchCols = list(
                   NULL,NULL,
                   list(search = '10 ...'),
                   NULL,NULL,
                   list(search = '["Any"]' ),
                   NULL,NULL,NULL,NULL
  ),
     autoWidth = TRUE,
    pageLength = 25
  ),
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: center; color:black;  font-size:200% ;",
    "Table : Sideboard cards"
  )
)  %>% 
  DT::formatPercentage(c(4,7,9,12),digits = 1)
```
