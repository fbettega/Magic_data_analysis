---
title: "Last winners"
---

```{r setup, include=FALSE, message = FALSE, warning = FALSE}
library(pander)
library("rjson")
library(tidyverse)
library(plotly)
library("rwantshue")
conflicted::conflicts_prefer(dplyr::filter)
conflicted::conflicts_prefer(dplyr::lag)
source("../sources/S2_Source_mtg_new_card.R",local = TRUE)
source("../sources/sources_script_specific/S7_last_weeks_winners.R",local = TRUE)
params <- read_rds( "../data/intermediate_result/temp_format_encours_for_param.rds")
# loaded_base_data <- readRDS("data/data_meta_en_cours.rds")

# modern_DB_card <- read_csv("../data/mtg_data/DBcarte_oracle.csv") %>% 
#     filter(
#         !!sym(paste0("legalities.",tolower(params$format_param))) == "legal"
#     )

# sample size minimum pour etre un groupe


df_export <- readRDS(paste0("../data/",params$format_param,"_data_meta_en_cours.rds")) %>%
      # include filter bad deck
  filter(Valide_deck) %>% 
  mutate(
    Deck_winrate = winrate_1_data(Wins, Losses)
  ) %>%
  mutate(
    Archetype_count = n()
  ) 

big_mtgo_tournament <- str_replace_all(
  c(
    "Modern Challenge 64",
    "Modern Showcase Challenge",
    "Modern Super Qualifier",
    "Modern Showcase Qualifier"
  ), "Modern", params$format_param
)

```

```{r initial_data_loading}
pre_rename_Tournament_of_interest_df <- df_export %>%
  filter(Tournament != paste0(params$format_param," League"),
         Week	>= max(Week)-last_week_number_7	) %>% 
  group_by(TournamentFile) %>% 
  mutate(number_of_player = n()) %>% 
  ungroup() %>% 
  
  filter(
    (
  number_of_player >= min_tournament_size_7|Tournament %in% big_mtgo_tournament
      ),
         str_detect(Result,"Place$")
         ) %>% 
  mutate(Place = as.integer(str_extract(Result,"^\\d+")))


rename_tournament <- pre_rename_Tournament_of_interest_df %>%  
  distinct(TournamentFile,.keep_all = TRUE) %>%
    group_by(Tournament,Week) %>% 
  arrange(desc(Date)) %>% 
  mutate(
    Number_of_same_name_tournament = n_distinct(TournamentFile) == 1,
    Multiple_tournament = paste0(Tournament, " number : ",row_number() ),
    Tournament = ifelse(Number_of_same_name_tournament == 1,Tournament,Multiple_tournament)
           ) %>% 
  ungroup() %>% 
  select(TournamentFile,Tournament)


Tournament_of_interest_df <- right_join(
  rename_tournament,
  pre_rename_Tournament_of_interest_df,
  by = "TournamentFile") %>% 
  select(-Tournament.y) %>% 
  rename(Tournament = Tournament.x) %>% 
  mutate(
    Global_winrate =
      winrate_1_data(
        sum(Wins,na.rm = TRUE),
        sum(Losses,na.rm = TRUE)
        )
    )
  
rm(pre_rename_Tournament_of_interest_df,rename_tournament)

scheme <- iwanthue(seed = 42, force_init = TRUE)  
```


```{r}
# x <- "modern-challenge-64-2024-09-2912692965"

total_result <- lapply(unique(Tournament_of_interest_df$TournamentFile), function(x){
  
  # print(x)
  Title_df <- Tournament_of_interest_df %>%
    filter(TournamentFile == x) 
  
  Title_str <- paste0(unique(Title_df$Tournament) ," (",format(as.Date(unique(Title_df$Date)), "%d-%m-%Y"), ") Number of player : ", unique(Title_df$number_of_player))
  
  vizual_result <- top_8_table_and_plot_prez_generator(
    df_fun = Tournament_of_interest_df,
    current_tournament = x
  )
  
  
  return(list(Title = Title_str,
              plot = vizual_result))
}
) %>% 
  purrr::set_names(unique(Tournament_of_interest_df$TournamentFile))



TournamentFile_by_week <- lapply(unique(Tournament_of_interest_df$Week),function(x){
  
  Tournament_of_interest_df %>%
    filter(Week == x) %>% 
    distinct(TournamentFile) %>% 
    pull(TournamentFile)
  
  
}) %>%
  purrr::set_names(unique(Tournament_of_interest_df$Week))
```




```{r sources_introduction}
knitr::read_chunk("../sources/S1_introduction_text.R")
```


```{r, Introduction_chunk_7_top8, results='asis'}

```


```{r dependancy_test}
# Init Step to make sure that the dependencies are loaded
# htmltools::tagList(datatable(cars))
# htmltools::tagList(ggplotly(ggplot()))
```


```{r}




# htmlwidgets::saveWidget(
#   total_result[[u]]$plot$plot_prez, 
#   paste0("../data/intermediate_result/temp_html_outpout/",
#          i,
#          TournamentFile_by_week[[i]][u],".html"),
# selfcontained = TRUE)



```



```{r}
fun_print_tournament <- function(
    tournament_file_fun,
    total_result_fun,
                                 iteration){
  
  pander::pandoc.header(paste0("Week : ",names(tournament_file_fun)[iteration]), level = 1)
  pander::pandoc.p("")
  pander::pandoc.p("")
  res <- lapply(seq_along(total_result_fun), function(u){

    
    
# for (u in seq_along(total_result_fun)){
if(names(total_result_fun)[u] %in% tournament_file_fun[[iteration]]){

      pander::pandoc.header(total_result_fun[[u]]$Title,
                            level = 2)
      pander::pandoc.p("")
      pander::pandoc.p("")
      pander::pandoc.p("::: {.panel-tabset .nav-pills}")
      pander::pandoc.p("")
      pander::pandoc.p("")

      # pander::pandoc.header(total_result_fun[[u]]$Title, level = 3)
      # pander::pandoc.p("")
      # pander::pandoc.p("")
      pander::pandoc.header("Presence plot", level = 3)
      pander::pandoc.p("")
      pander::pandoc.p("")
      # print(
      # htmltools::tagList(
      #   # as.widget(
      # # cat(
      # #   knitr::knit_print(
      #   total_result_fun[[u]]$plot$plot_prez
      #    )
      #    )



# solution to force inclusion of plotly in loop but lead to really large files
      htmlwidgets::saveWidget(
  total_result_fun[[u]]$plot$plot_prez,
  paste0("../data/intermediate_result/temp_html_outpout/temp7plot/",
         iteration,
         tournament_file_fun[[iteration]][u],".html"),
selfcontained = TRUE)

       print(
        htmltools::includeHTML(
          paste0("../data/intermediate_result/temp_html_outpout/temp7plot/",
        iteration,
         tournament_file_fun[[iteration]][u],".html"))
        )




       # )
      pander::pandoc.p("")
      pander::pandoc.p("")
      pander::pandoc.header("Top 8 list", level = 3)
      print(htmltools::tagList(total_result_fun[[u]]$plot$top8_table))
      pander::pandoc.p("")
      pander::pandoc.p("")
      pander::pandoc.p(":::")
      pander::pandoc.p("")
      pander::pandoc.p("")
      }
  }
)

  
}
  
```





```{r,  results='asis'}
# this week
# last week
# two weeks ago
print_res_winning_deck <- lapply(seq_along(TournamentFile_by_week),function(i){
  
fun_print_tournament(
    tournament_file_fun =TournamentFile_by_week ,
    total_result_fun = total_result,
    iteration = i)
 })

  unlink(
    list.files("../data/intermediate_result/temp_html_outpout/temp7plot/",
               full.names = TRUE
               ),recursive = TRUE
  )
```







