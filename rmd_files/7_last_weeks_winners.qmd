---
title: "Last winners"
---

```{r setup, include=FALSE, message = FALSE, warning = FALSE}
library(pander)
library("rjson")
library(tidyverse)
library(plotly)
library("rwantshue")
conflicted::conflicts_prefer(dplyr::filter)
conflicted::conflicts_prefer(dplyr::lag)
source("../sources/S2_Source_mtg_new_card.R",local = TRUE)

# loaded_base_data <- readRDS("data/data_meta_en_cours.rds")

modern_DB_card <- read_csv("../data/mtg_data/DBcarte_modern.csv")

# sample size minimum pour etre un groupe


df_export <- readRDS("../data/data_meta_en_cours.rds") %>%
      # include filter bad deck
  filter(Valide_deck) %>% 
  mutate(
    Deck_winrate = winrate_1_data(Wins, Losses)
  ) %>%
  mutate(
    Archetype_count = n()
  ) 
```

```{r initial_data_loading}
pre_rename_Tournament_of_interest_df <- df_export %>%
  filter(Tournament != "Modern League",
         Week	> max(Week)-last_week_number_7	) %>% 
  group_by(TournamentFile) %>% 
  mutate(number_of_player = n()) %>% 
  ungroup() %>% 
  filter(number_of_player >= min_tournament_size_7,
         str_detect(Result,"Place$")
         ) %>% 
  mutate(Place = as.integer(str_extract(Result,"^\\d+")))


rename_tournament <- pre_rename_Tournament_of_interest_df %>%  
  distinct(TournamentFile,.keep_all = TRUE) %>%
    group_by(Tournament,Week) %>% 
  arrange(desc(Date)) %>% 
  mutate(
    Number_of_same_name_tournament = n_distinct(TournamentFile) == 1,
    Multiple_tournament = paste0(Tournament, " number : ",row_number() ),
    Tournament = ifelse(Number_of_same_name_tournament == 1,Tournament,Multiple_tournament)
           ) %>% 
  ungroup() %>% 
  select(TournamentFile,Tournament)


Tournament_of_interest_df <- right_join(
  rename_tournament,
  pre_rename_Tournament_of_interest_df,
  by = "TournamentFile") %>% 
  select(-Tournament.y) %>% 
  rename(Tournament = Tournament.x) %>% 
  mutate(
    Global_winrate =
      winrate_1_data(
        sum(Wins,na.rm = TRUE),
        sum(Losses,na.rm = TRUE)
        )
    )
  
rm(pre_rename_Tournament_of_interest_df,rename_tournament)

scheme <- iwanthue(seed = 42, force_init = TRUE)  
```

```{r sources_introduction}
knitr::read_chunk("../sources/S2_Source_mtg_new_card.R")
```

```{r function}
top_8_table_and_plot_prez_generator <- function(df_fun,current_tournament){
  Tournament_of_interest_en_cours <-
    df_fun  %>%
    filter(TournamentFile == current_tournament) %>%
    group_by(Archetype) %>%
    mutate(
      Archetype_count = n()
    ) %>%
    arrange(Archetype_count) %>% 
    ungroup() %>% 
    mutate(
      Archetype =
        factor(Archetype,
               level = unique(.$Archetype)
        ),
      Rank = as.numeric(
        factor(Archetype,
               level = rev(unique(.$Archetype))
        )
      ),
      Base_Archetype =
        
        factor(Base_Archetype,
               level = unique(.$Base_Archetype)
        ),
      # A reflechir ou tu mets Ã§a selon les filters
      Archetype_percent = Archetype_count / nrow(.)
    )
  
  colors_scales_presence_en_cours <- scheme$hex(
    length(levels(Tournament_of_interest_en_cours$Base_Archetype))
  )
  
  
  plot_tournament_presence <- 
    plot_presence_fun(
      df_base = Tournament_of_interest_en_cours,
      color_scheme = colors_scales_presence_en_cours,
      time_limit = Inf,
      compare_time_limit = NULL
    )
  
  unlist_side_or_main_deck_winner <- function(df,top_x_rank,cols_fun){
    not_colfuns <- ifelse(cols_fun == "Sideboard","Mainboard","Sideboard")
    
    Unnest_filter_table <- df %>%  
      select(
        all_of(cols_fun),all_of(not_colfuns),Place,Player,AnchorUri, Archetype,Base_Archetype
      ) %>% 
      select(-all_of(not_colfuns)) %>% 
      filter(Place <= max(sort(Place)[1:top_x_rank])) %>% 
      arrange(Place) %>% 
      # mutate(rank = 1:nrow(.)) %>% 
      # mutate(Player = paste0('[',Place," : ",Player,'](',AnchorUri,')'))%>% 
      # select(-AnchorUri#,-rank
      #      ) %>%
      unnest_longer(!!rlang::sym(cols_fun)) %>%
      unnest_wider(!!rlang::sym(cols_fun), names_sep = "_") %>% 
      mutate(Main_or_side = cols_fun) %>% 
      rename(Count = paste0(cols_fun, "_Count") ,CardName = paste0(cols_fun, "_CardName"))
    return(Unnest_filter_table)
  }
  
  
  Df_combine <- rbind(
    unlist_side_or_main_deck_winner(
      Tournament_of_interest_en_cours, 
      top_x_rank = 8,
      "Mainboard"
    ),
    unlist_side_or_main_deck_winner(
      Tournament_of_interest_en_cours,
      top_x_rank =8,
      "Sideboard"
    )
  ) %>% 
    group_by(Place,Player) %>% 
    group_split()
  

  
  list_of_table_to_plot <- lapply(Df_combine, function(y){
    
    table_format <- y %>% 
      select(-Place,-Player,-AnchorUri,-Archetype,-Base_Archetype) %>% 
      group_by(Main_or_side) %>%
      gt::gt(rowname_col = "CardName") %>%  
      gt::tab_style(
        style = gt::cell_text(weight = "bold"),
        locations = gt::cells_row_groups()
      ) %>%
      gt::tab_options(column_labels.hidden = TRUE,
                      table.layout = "Auto") %>%
      gt::as_raw_html()
    
    return(table_format)
  }) %>% 
    bind_cols()
  
  # manque archetype et base archetype
  title_table <- lapply(Df_combine, function(y){ title_table <- gt::md(paste0(
    "Place : ", unique(y$Place)," Archetype : ",unique(y$Archetype),"/",unique(y$Base_Archetype), "<br>",
    "[Player : ",unique(y$Player),"](",unique(y$AnchorUri),")")
  )
  }) %>% purrr::set_names(colnames(list_of_table_to_plot))
  
  
  
  final_table <- list_of_table_to_plot %>% 
    gt::gt() %>% 
    gt::fmt_markdown(columns = everything()) %>% #render cell contents as html
    gt::cols_label(
      .list = title_table
    ) %>% 
    gt::opt_stylize(style = 5, color = "cyan", add_row_striping = TRUE) %>%
    gt::cols_align(
      align = c("center"),
      columns = everything()
    ) %>% gt::tab_style( style = "vertical-align:top", locations = gt::cells_body() ) %>% 
    gt::tab_style( style = "vertical-align:top", locations = gt::cells_column_labels() )
  
  
  
  return(list(plot_prez = plot_tournament_presence,
              top8_table = final_table))
}
```

```{r}
total_result <- lapply(unique(Tournament_of_interest_df$TournamentFile), function(x){
        
  
      Title_df <- Tournament_of_interest_df %>%
    filter(TournamentFile == x) 
      
        Title_str <- paste0(unique(Title_df$Tournament) ," (",format(as.Date(unique(Title_df$Date)), "%d-%m-%Y"), ") Number of player : ", unique(Title_df$number_of_player))
  
        vizual_result <- top_8_table_and_plot_prez_generator(
          df_fun = Tournament_of_interest_df,
          current_tournament = x
          )


return(list(Title = Title_str,
            plot = vizual_result))
  }
) %>% 
  purrr::set_names(unique(Tournament_of_interest_df$TournamentFile))


```

```{r}
TournamentFile_by_week <- lapply(unique(Tournament_of_interest_df$Week),function(x){
  
  Tournament_of_interest_df %>%
    filter(Week == x) %>% 
    distinct(TournamentFile) %>% 
    pull(TournamentFile)
  
  
}) %>%
  purrr::set_names(unique(Tournament_of_interest_df$Week))
```

# Winner of last tournament

```{r, Introduction_chunk_7_top8, results='asis'}

```

```{r,  results='asis'}
# this week
# last week
# two weeks ago
for (i in seq_along(TournamentFile_by_week)){
  pander::pandoc.header(paste0("Week : ",names(TournamentFile_by_week)[i]), level = 2)
  pander::pandoc.p("")
  
  for (u in seq_along(total_result)){
    if(names(total_result)[u] %in% TournamentFile_by_week[[i]]){
      pander::pandoc.header(total_result[[u]]$Title, level = 3)
      pander::pandoc.p("")
      pander::pandoc.header("Presence plot", level = 4)
      print(htmltools::tagList(total_result[[u]]$plot$plot_prez))
      pander::pandoc.p("")
      pander::pandoc.p("")
      pander::pandoc.header("Top 8 list", level = 4)
      print(htmltools::tagList(total_result[[u]]$plot$top8_table))
      pander::pandoc.p("")
      pander::pandoc.p("")}
  }
  }
  
```
